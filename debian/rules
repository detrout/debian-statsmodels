#!/usr/bin/make -f
# -*- mode: makefile; coding: utf-8 -*-

# override HOME (for weave) and matplotlib config directory
# to allow building in chroots with read-only HOME
export HOME=$(CURDIR)/build
export MPLCONFIGDIR=$(HOME)

PYBUILD_NAME=statsmodels

UVER := $(shell LC_ALL=C dpkg-parsechangelog | awk '/^Version:/{print $$2;}' | sed -e 's,-[^-]*$$,,g')
CYTHONVER := $(shell dpkg -l cython | awk '/^ii/{print $$3;}' || echo 0)
MPLVER := $(shell dpkg -l python-matplotlib | awk '/^ii/{print $$3;}' || echo 0)
IPYTHONVER := $(shell ipython -V || echo 0) # 0.12 is needed to build docs, otherwise use IPython01x
IPYTHONPATH := $(shell dpkg --compare-versions $(IPYTHONVER) lt 0.13 \
				 && echo ":/usr/lib/python$(PYVER)/dist-packages/IPython01X" || echo '')

MIN_CYTHONVER = 0.19

ifeq (,$(filter noopt,$(DEB_BUILD_OPTIONS)))
export OPT+=-g -O0
endif

%:
	dh  $@ --with python2,python3,sphinxdoc --buildsystem=pybuild


cythonize:
	find statsmodels -iname *.pyx | sed -e 's,\.pyx,\.c,g' | xargs -r rm -f
	: # since there is no cython command and I have no time...
	python setup.py build_ext --inplace -f
	mkdir -p debian/cythonized-files
	cp $$(find statsmodels -iname *.pyx | sed -e 's,\.pyx,\.c,g') debian/cythonized-files
	echo "$(UVER)" >| debian/cythonized-files/VERSION


override_dh_auto_configure:
	dpkg --compare-versions $(CYTHONVER) lt $(MIN_CYTHONVER) && { \
		echo "I: Using pre-Cython-ed files"; \
		find -iname *pyx | while read p; do \
		  f=$$(basename $$p); f=$${f%%.pyx}; d=$$(dirname $$p); \
		  cp -rp debian/cythonized-files/$$f.c $$d/; done; } || :
	dh_auto_configure


override_dh_auto_test:
	: # overriden since testing happens against installed version across
	: # all supported python versions

# To guarantee HOME existence with mpl 1.3.0
# See https://github.com/matplotlib/matplotlib/issues/2300
#     http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=719384
$(HOME):
	mkdir "$@"

# Build docs during build
override_dh_auto_build: $(HOME)
	dh_auto_build
	sphinx-build docs/source/ build/html

#doc-stamp: python-install$(PYVER)
#	: # I: Generate documentation
#	: # Build Documentation -- assure existence of build/html for nodoc
#	mkdir -p build/html
#ifeq (,$(filter nodoc,$(DEB_BUILD_OPTIONS)))
#	PYTHONPATH=`/bin/ls -d $(CURDIR)/$(PACKAGE_ROOT_DIR)/usr/lib/python$(PYVER)/*/`:$(CURDIR)$(IPYTHONPATH) \
#	 $(MAKE) -C docs html
#	mv docs/build/* build/
#	: # Fix up links to MathJax to be local
#	grep -l '/mathjax/' -R build/html/examples/notebooks \
#	| xargs sed -i -e 's,https://\S*.com/mathjax/latest/MathJax.js,file:///usr/share/javascript/mathjax/MathJax.js,g'
#	rm -rf docs/source/generated/
#endif
#	touch $@

override_dh_auto_clean: $(HOME)
	dh_auto_clean
	-rm -f cythonize.dat
	-rm -rf docs/source/dev/generated/
	-rm docs/source/_static/gettingstarted_0.png
	-rm docs/source/datasets/statsmodels.datasets.clear_data_home.rst
	-rm docs/source/datasets/statsmodels.datasets.get_data_home.rst
	-rm docs/source/datasets/statsmodels.datasets.get_rdataset.rst
	-rm docs/source/datasets/statsmodels.datasets.webuse.rst

override_dh_clean:
	dh_clean
	rm -rf build *-stamp *.egg-info docs/source/generated
	: # Remove autogenerated version.py
	rm -f statsmodels/version.py
	rm -f doc-stamp

override_dh_auto_install:
	dh_auto_install
	find debian -name *.pyc -delete
	find debian -iname COPYING -o -iname LICENSE* | xargs -r rm -f
	find debian -name cancer.csv -exec chmod a-x {} \;
	dh_numpy
	dh_numpy3

#python-test%: python-install%
#ifeq (,$(filter nocheck,$(DEB_BUILD_OPTIONS)))
#	: # Run unittests here against installed statsmodels
#	cd build/ && \
#	 PYTHONPATH=`/bin/ls -d $(CURDIR)/$(PACKAGE_ROOT_DIR)/usr/lib/python$*/*/` \
#	 MPLCONFIGDIR=$(CURDIR)/build \
#	 python$* /usr/bin/nosetests -s -v --exclude=sandbox statsmodels
#else
#	: # Skip unittests due to nocheck
#endif
#

## move binary libraries into -lib
#override_dh_python2:
#	: # Move platform-specific libraries into -lib
#	for lib in $$(find $(PACKAGE_ROOT_DIR)/usr -name '*.so'); do \
#	   sdir=$$(dirname $$lib) ; \
#	   tdir=$(PACKAGE_ROOT_DIR)-lib/$${sdir#*$(PACKAGE_NAME)/} ; \
#	   mkdir -p $$tdir ; \
#	   echo "I: Moving '$$lib' into '$$tdir'." ; \
#	   mv $$lib $$tdir ; \
#	done

get-orig-source:
	uscan --upstream-version 0 --rename
